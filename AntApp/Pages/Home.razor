@page "/"

<PageTitle>Home</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Congratulations!</MudText>
<MudText>You've made it this far.</MudText>

<AuthorizeView>
    <Authorized>
        <MudText Class="my-4">Welcome @context.User?.Identity?.Name.</MudText>
        @if (Biometric.FingersConfirmed)
        {
            <MudText Class="my-4">Secrets...</MudText>
        }
        else
        {
            <MudButton OnClick=@CheckFingers Variant=@Variant.Filled Color=@Color.Primary>Fingerprint</MudButton>
        }
    </Authorized>
    <NotAuthorized>
        <MudText Class="my-4">All without authenticating...</MudText>
    </NotAuthorized>
</AuthorizeView>
<MudButton OnClick=@StateHasChanged Variant=@Variant.Filled Color=@Color.Primary>Update State</MudButton>

@code
{
    [Inject] private BiometricService Biometric { get; set; }
    [Inject] private LifecycleService Lifecycle { get; set; }

    private async Task CheckFingers()
    {
        var fingerprintable = await BiometricService.GetAuthenticationStatus();
        if (fingerprintable)
        {
            await Biometric.Authenticate(CancellationToken.None);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Lifecycle.Deactivated += HandleDeactivated;
        }
    }

    // TODO: This runs on resume, "leaking" biometric content for a split second
    // Force update after pause
    private void HandleDeactivated()
    {

        StateHasChanged();
    }
}